// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.1008
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GherkinAutomation._1_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Creating New Form.")]
    public partial class CreatingNewForm_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateNewForm.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Creating New Form.", "In order to keep track of information regarding enegagements,\r\nas an engagement o" +
                    "wner,\r\nI want to be able to create new engagement form.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("I am logged in as engagementOwner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating New sHCP Form")]
        [NUnit.Framework.CategoryAttribute("Generate_New_Form")]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "No", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID00", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "No", "optional", "Poznan", "Poland", "Slovakia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "Yes", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "not applicable", "Description", "^ID01", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "No", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID02", null)]
        public virtual void CreatingNewSHCPForm(
                    string engownername, 
                    string globalfunction, 
                    string jobtitle, 
                    string engagementpaidby, 
                    string function, 
                    string hcpcoord, 
                    string linemanager, 
                    string hcpcountry, 
                    string hcpfirstname, 
                    string hcplastname, 
                    string therapeuticarea, 
                    string productbrandmolecule, 
                    string indication, 
                    string protocolnumber, 
                    string engagementtitle, 
                    string congress, 
                    string engagementtype, 
                    string alldayengagement, 
                    string engagementvenue, 
                    string engagementcity, 
                    string engagementcountry, 
                    string engagementstateprovince, 
                    string scimedbusneeds, 
                    string engagementobjective, 
                    string contractedservice, 
                    string description, 
                    string affcontact, 
                    string hcproleselect, 
                    string rationalforhcp, 
                    string areaofexpertise, 
                    string nofee, 
                    string totalactivitytime, 
                    string preptime, 
                    string hourlyrate, 
                    string flatrate, 
                    string totaldisturbancefee, 
                    string currency, 
                    string noaccomodation, 
                    string accnametolookup, 
                    string acccostspernight, 
                    string accnrofnights, 
                    string acccurrency, 
                    string accdescription, 
                    string nomeal, 
                    string mealtype, 
                    string mealestcosts, 
                    string numberofmeals, 
                    string mealcurrency, 
                    string mealrestaurantname, 
                    string mealcomments, 
                    string breakfastin, 
                    string notravel, 
                    string traveltype, 
                    string travelcategory, 
                    string travelestcosts, 
                    string travelcurrency, 
                    string traveldescription, 
                    string noothercosts, 
                    string othcoststype, 
                    string othcostsamount, 
                    string othcostscurrency, 
                    string othcostscomment, 
                    string localreqfull, 
                    string locreqsubmit, 
                    string locreqspecify, 
                    string scenarioID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Generate_New_Form"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating New sHCP Form", @__tags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.When("I clicked New Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("sHCP Form option is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.When("I select sHCP option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.And("I click Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("New sHCP Form opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 17
 testRunner.When("I fill in Engagement Owner Details with following data:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 19
 testRunner.Then("Engagement Owner Details is filled correctly", ((string)(null)), table2, "Then ");
#line 21
 testRunner.When(string.Format("I fill in HCP Coordinator Section as {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then(string.Format("HCP Coordinator Section is filled with {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.When(string.Format("I fill in Line Manager as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then(string.Format("Line Manager section is filled as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 25
 testRunner.When("I fill in Healthcare Professional Details", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 27
 testRunner.Then("Healthcare Professional Details is filled", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 29
 testRunner.When("I fill in Product Information with following data:", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 31
 testRunner.Then("Product Information is filled correctly", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 33
 testRunner.When("I fill in Engagement Description with following data:", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 35
 testRunner.Then("Engagement Description is filled correctly", ((string)(null)), table8, "Then ");
#line 37
 testRunner.When(string.Format("I fill in Affiliate Contact as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then(string.Format("Affiliate Contact is filled as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 39
 testRunner.When("I fill in HCP Role with following data:", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 41
 testRunner.Then("HCP Role is filled correctly", ((string)(null)), table10, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 43
 testRunner.When("I fill in Fee for Service with following data:", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 45
 testRunner.Then("Fee for Service is filled correctly", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 47
 testRunner.When("I fill in Accomodation Description with following data:", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 49
 testRunner.Then("Accomodation Description is filled correctly", ((string)(null)), table14, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 51
 testRunner.When("I fill in Meal Description with following data:", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 53
 testRunner.Then("Meal Description is filled correctly", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 55
 testRunner.When("I fill in Travel Details with following data:", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 57
 testRunner.Then("Travel Details is filled correctly", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 59
 testRunner.When("I fill in Other Costs with following data:", ((string)(null)), table19, "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 61
 testRunner.Then("Other Costs is filled correctly", ((string)(null)), table20, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 63
 testRunner.When("I fill in Local Requirements with following data:", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 65
 testRunner.Then("Local Requirements is filled correctly", ((string)(null)), table22, "Then ");
#line 67
 testRunner.When("I fill in Information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.Then("Information Section is filled correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
 testRunner.When("I click Save Form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function),
                        string.Format("{0}", hcpcoord),
                        string.Format("{0}", linemanager),
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber),
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description),
                        string.Format("{0}", affcontact),
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise),
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency),
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription),
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin),
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription),
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment),
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 71
 testRunner.And("New sHCP form is verified", ((string)(null)), table23, "And ");
#line 73
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating New mHCP Form")]
        [NUnit.Framework.CategoryAttribute("Generate_New_Form")]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID10", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID11", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID12", null)]
        public virtual void CreatingNewMHCPForm(
                    string engownername, 
                    string globalfunction, 
                    string jobtitle, 
                    string engagementpaidby, 
                    string function, 
                    string hcpcoord, 
                    string linemanager, 
                    string hcpcountry, 
                    string hcpfirstname, 
                    string hcplastname, 
                    string hcpfirstname2, 
                    string hcplastname2, 
                    string therapeuticarea, 
                    string productbrandmolecule, 
                    string indication, 
                    string protocolnumber, 
                    string engagementtitle, 
                    string congress, 
                    string engagementtype, 
                    string alldayengagement, 
                    string engagementvenue, 
                    string engagementcity, 
                    string engagementcountry, 
                    string engagementstateprovince, 
                    string scimedbusneeds, 
                    string engagementobjective, 
                    string contractedservice, 
                    string description, 
                    string affcontact, 
                    string hcproleselect, 
                    string rationalforhcp, 
                    string areaofexpertise, 
                    string nofee, 
                    string totalactivitytime, 
                    string preptime, 
                    string hourlyrate, 
                    string flatrate, 
                    string totaldisturbancefee, 
                    string currency, 
                    string noaccomodation, 
                    string accnametolookup, 
                    string acccostspernight, 
                    string accnrofnights, 
                    string acccurrency, 
                    string accdescription, 
                    string nomeal, 
                    string mealtype, 
                    string mealestcosts, 
                    string numberofmeals, 
                    string mealcurrency, 
                    string mealrestaurantname, 
                    string mealcomments, 
                    string breakfastin, 
                    string notravel, 
                    string traveltype, 
                    string travelcategory, 
                    string travelestcosts, 
                    string travelcurrency, 
                    string traveldescription, 
                    string noothercosts, 
                    string othcoststype, 
                    string othcostsamount, 
                    string othcostscurrency, 
                    string othcostscomment, 
                    string localreqfull, 
                    string locreqsubmit, 
                    string locreqspecify, 
                    string scenarioID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Generate_New_Form"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating New mHCP Form", @__tags);
#line 85
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 86
 testRunner.When("I clicked New Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.Then("mHCP Form option is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
 testRunner.When("I select mHCP option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.And("I click Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.Then("New mHCP Form opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 91
 testRunner.When("I fill in Engagement Owner Details with following data:", ((string)(null)), table24, "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 93
 testRunner.Then("Engagement Owner Details is filled correctly", ((string)(null)), table25, "Then ");
#line 95
 testRunner.When(string.Format("I fill in HCP Coordinator Section as {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then(string.Format("HCP Coordinator Section is filled with {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.When(string.Format("I fill in Line Manager as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then(string.Format("Line Manager section is filled as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", hcpfirstname2),
                        string.Format("{0}", hcplastname2)});
#line 99
 testRunner.When("I fill in multiple Healthcare Professional Details", ((string)(null)), table26, "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 101
 testRunner.Then("Healthcare Professional Details is filled", ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 103
 testRunner.When("I fill in Product Information with following data:", ((string)(null)), table28, "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 105
 testRunner.Then("Product Information is filled correctly", ((string)(null)), table29, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 107
 testRunner.When("I fill in Engagement Description with following data:", ((string)(null)), table30, "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 109
 testRunner.Then("Engagement Description is filled correctly", ((string)(null)), table31, "Then ");
#line 111
 testRunner.When(string.Format("I fill in Affiliate Contact as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.Then(string.Format("Affiliate Contact is filled as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 113
 testRunner.When("I fill in HCP Role with following data:", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 115
 testRunner.Then("HCP Role is filled correctly", ((string)(null)), table33, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 117
 testRunner.When("I fill in Fee for Service with following data:", ((string)(null)), table34, "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 119
 testRunner.Then("Fee for Service is filled correctly", ((string)(null)), table35, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 121
 testRunner.When("I fill in Accomodation Description with following data:", ((string)(null)), table36, "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 123
 testRunner.Then("Accomodation Description is filled correctly", ((string)(null)), table37, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 125
 testRunner.When("I fill in Meal Description with following data:", ((string)(null)), table38, "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 127
 testRunner.Then("Meal Description is filled correctly", ((string)(null)), table39, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 129
 testRunner.When("I fill in Travel Details with following data:", ((string)(null)), table40, "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 131
 testRunner.Then("Travel Details is filled correctly", ((string)(null)), table41, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 133
 testRunner.When("I fill in Other Costs with following data:", ((string)(null)), table42, "When ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 135
 testRunner.Then("Other Costs is filled correctly", ((string)(null)), table43, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 137
 testRunner.When("I fill in Local Requirements with following data:", ((string)(null)), table44, "When ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 139
 testRunner.Then("Local Requirements is filled correctly", ((string)(null)), table45, "Then ");
#line 141
 testRunner.When("I fill in Information section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.Then("Information Section is filled correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
 testRunner.When("I click Save Form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.Then("mHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function),
                        string.Format("{0}", hcpcoord),
                        string.Format("{0}", linemanager),
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", hcpfirstname2),
                        string.Format("{0}", hcplastname2),
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber),
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description),
                        string.Format("{0}", affcontact),
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise),
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency),
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription),
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin),
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription),
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment),
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 145
 testRunner.And("New mHCP form is verified", ((string)(null)), table46, "And ");
#line 147
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating New uHCP Form")]
        [NUnit.Framework.CategoryAttribute("Generate_New_Form")]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "123", "555.05", "ALL(Lek)", "sample comment", "^ID20", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "123", "555.05", "ALL(Lek)", "sample comment", "^ID21", null)]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "Mark", "Johnson", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "123", "555.05", "ALL(Lek)", "sample comment", "^ID22", null)]
        public virtual void CreatingNewUHCPForm(
                    string engownername, 
                    string globalfunction, 
                    string jobtitle, 
                    string engagementpaidby, 
                    string function, 
                    string hcpcoord, 
                    string linemanager, 
                    string hcpcountry, 
                    string hcpfirstname, 
                    string hcplastname, 
                    string hcpfirstname2, 
                    string hcplastname2, 
                    string therapeuticarea, 
                    string productbrandmolecule, 
                    string indication, 
                    string protocolnumber, 
                    string engagementtitle, 
                    string congress, 
                    string engagementtype, 
                    string alldayengagement, 
                    string engagementvenue, 
                    string engagementcity, 
                    string engagementcountry, 
                    string engagementstateprovince, 
                    string scimedbusneeds, 
                    string engagementobjective, 
                    string contractedservice, 
                    string description, 
                    string affcontact, 
                    string nomeal, 
                    string mealtype, 
                    string mealestcosts, 
                    string numberofmeals, 
                    string mealcurrency, 
                    string mealrestaurantname, 
                    string mealcomments, 
                    string breakfastin, 
                    string noothercosts, 
                    string othcoststype, 
                    string othcostsamount, 
                    string othcostscurrency, 
                    string othcostscomment, 
                    string scenarioID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Generate_New_Form"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating New uHCP Form", @__tags);
#line 159
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 160
 testRunner.When("I clicked New Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
 testRunner.Then("uHCP Form option is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 162
 testRunner.When("I select uHCP option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.And("I click Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.Then("New uHCP Form opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 165
 testRunner.When("I fill in Engagement Owner Details with following data:", ((string)(null)), table47, "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 167
 testRunner.Then("Engagement Owner Details is filled correctly", ((string)(null)), table48, "Then ");
#line 169
 testRunner.When(string.Format("I fill in HCP Coordinator Section as {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then(string.Format("HCP Coordinator Section is filled with {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
 testRunner.When(string.Format("I fill in Line Manager as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.Then(string.Format("Line Manager section is filled as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", hcpfirstname2),
                        string.Format("{0}", hcplastname2)});
#line 173
 testRunner.When("I fill in multiple Healthcare Professional Details", ((string)(null)), table49, "When ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 175
 testRunner.Then("Healthcare Professional Details is filled", ((string)(null)), table50, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 177
 testRunner.When("I fill in Product Information with following data:", ((string)(null)), table51, "When ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 179
 testRunner.Then("Product Information is filled correctly", ((string)(null)), table52, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 181
 testRunner.When("I fill in Engagement Description with following data:", ((string)(null)), table53, "When ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 183
 testRunner.Then("Engagement Description is filled correctly", ((string)(null)), table54, "Then ");
#line 185
 testRunner.When(string.Format("I fill in Affiliate Contact as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
 testRunner.Then(string.Format("Affiliate Contact is filled as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 187
 testRunner.When("I fill in Meal Description with following data:", ((string)(null)), table55, "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 189
 testRunner.Then("Meal Description is filled correctly", ((string)(null)), table56, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 191
 testRunner.When("I fill in Other Costs with following data:", ((string)(null)), table57, "When ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 193
 testRunner.Then("Other Costs is filled correctly", ((string)(null)), table58, "Then ");
#line 195
 testRunner.When("I click Save Form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
 testRunner.Then("uHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function),
                        string.Format("{0}", hcpcoord),
                        string.Format("{0}", linemanager),
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", hcpfirstname2),
                        string.Format("{0}", hcplastname2),
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber),
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description),
                        string.Format("{0}", affcontact),
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin),
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 197
 testRunner.And("New uHCP form is verified", ((string)(null)), table59, "And ");
#line 199
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01.sHCP_creation_US")]
        [NUnit.Framework.CategoryAttribute("US_sHCP")]
        [NUnit.Framework.TestCaseAttribute("iHCP_01", "Yes", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "john", "kennedy", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "No", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "No", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "No", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID40", null)]
        public virtual void _01_SHCP_Creation_US(
                    string engownername, 
                    string globalfunction, 
                    string jobtitle, 
                    string engagementpaidby, 
                    string function, 
                    string hcpcoord, 
                    string linemanager, 
                    string hcpcountry, 
                    string hcpfirstname, 
                    string hcplastname, 
                    string therapeuticarea, 
                    string productbrandmolecule, 
                    string indication, 
                    string protocolnumber, 
                    string engagementtitle, 
                    string congress, 
                    string engagementtype, 
                    string alldayengagement, 
                    string engagementvenue, 
                    string engagementcity, 
                    string engagementcountry, 
                    string engagementstateprovince, 
                    string scimedbusneeds, 
                    string engagementobjective, 
                    string contractedservice, 
                    string description, 
                    string affcontact, 
                    string hcproleselect, 
                    string rationalforhcp, 
                    string areaofexpertise, 
                    string nofee, 
                    string totalactivitytime, 
                    string preptime, 
                    string hourlyrate, 
                    string flatrate, 
                    string totaldisturbancefee, 
                    string currency, 
                    string noaccomodation, 
                    string accnametolookup, 
                    string acccostspernight, 
                    string accnrofnights, 
                    string acccurrency, 
                    string accdescription, 
                    string nomeal, 
                    string mealtype, 
                    string mealestcosts, 
                    string numberofmeals, 
                    string mealcurrency, 
                    string mealrestaurantname, 
                    string mealcomments, 
                    string breakfastin, 
                    string notravel, 
                    string traveltype, 
                    string travelcategory, 
                    string travelestcosts, 
                    string travelcurrency, 
                    string traveldescription, 
                    string noothercosts, 
                    string othcoststype, 
                    string othcostsamount, 
                    string othcostscurrency, 
                    string othcostscomment, 
                    string localreqfull, 
                    string locreqsubmit, 
                    string locreqspecify, 
                    string scenarioID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "US_sHCP"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.sHCP_creation_US", @__tags);
#line 212
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 213
 testRunner.When("I clicked New Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
 testRunner.Then("sHCP Form option is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 215
 testRunner.When("I select sHCP option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
 testRunner.And("I click Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.Then("New sHCP Form opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 218
 testRunner.When("I fill in Engagement Owner Details with following data:", ((string)(null)), table60, "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 220
 testRunner.Then("Engagement Owner Details is filled correctly", ((string)(null)), table61, "Then ");
#line 222
 testRunner.When("User clicks Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 224
 testRunner.When("User adds Note to Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
 testRunner.Then("Note is added to form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 226
 testRunner.When("User adds Attachment to Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 227
 testRunner.Then("Attachment is added to form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 228
 testRunner.When("User clicks Edit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 229
 testRunner.Then("sHCP Form is in edit mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
 testRunner.When(string.Format("I fill in HCP Coordinator Section as {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
 testRunner.Then(string.Format("HCP Coordinator Section is filled with {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 232
 testRunner.When("User clicks Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 234
 testRunner.And("I write down form ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
 testRunner.When("I log in as HCPCoordinator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
 testRunner.And("User searches for existing sHCP form and opens it", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
 testRunner.When("User adds iHCP_04 as Agency contributor supporting role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 241
 testRunner.Then("User iHCP_04 is added as Agency contributor supporting role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 242
 testRunner.When("User clicks Edit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
 testRunner.Then("sHCP Form is in edit mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
 testRunner.When(string.Format("I fill in Line Manager as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
 testRunner.Then(string.Format("Line Manager section is filled as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
 testRunner.When("User clicks Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 247
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 248
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
 testRunner.When("I log in as agencyContributor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
 testRunner.And("User searches for existing sHCP form and opens it", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 253
 testRunner.When("User clicks Edit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 254
 testRunner.Then("sHCP Form is in edit mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 255
 testRunner.When("I fill in Healthcare Professional Details", ((string)(null)), table62, "When ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 257
 testRunner.Then("Healthcare Professional Details is filled", ((string)(null)), table63, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 259
 testRunner.When("I fill in Product Information with following data:", ((string)(null)), table64, "When ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 261
 testRunner.Then("Product Information is filled correctly", ((string)(null)), table65, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 263
 testRunner.When("I fill in Engagement Description with following data:", ((string)(null)), table66, "When ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 265
 testRunner.Then("Engagement Description is filled correctly", ((string)(null)), table67, "Then ");
#line 267
 testRunner.When(string.Format("I fill in Affiliate Contact as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 268
 testRunner.Then(string.Format("Affiliate Contact is filled as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 269
 testRunner.When("I fill in HCP Role with following data:", ((string)(null)), table68, "When ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 271
 testRunner.Then("HCP Role is filled correctly", ((string)(null)), table69, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 273
 testRunner.When("I fill in Fee for Service with following data:", ((string)(null)), table70, "When ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 275
 testRunner.Then("Fee for Service is filled correctly", ((string)(null)), table71, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 277
 testRunner.When("I fill in Accomodation Description with following data:", ((string)(null)), table72, "When ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 279
 testRunner.Then("Accomodation Description is filled correctly", ((string)(null)), table73, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 281
 testRunner.When("I fill in Meal Description with following data:", ((string)(null)), table74, "When ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 283
 testRunner.Then("Meal Description is filled correctly", ((string)(null)), table75, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 285
 testRunner.When("I fill in Travel Details with following data:", ((string)(null)), table76, "When ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 287
 testRunner.Then("Travel Details is filled correctly", ((string)(null)), table77, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 289
 testRunner.When("I fill in Other Costs with following data:", ((string)(null)), table78, "When ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 291
 testRunner.Then("Other Costs is filled correctly", ((string)(null)), table79, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 293
 testRunner.When("I fill in Local Requirements with following data:", ((string)(null)), table80, "When ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 295
 testRunner.Then("Local Requirements is filled correctly", ((string)(null)), table81, "Then ");
#line 297
 testRunner.When("I click Save Form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 299
 testRunner.When("User clicks Send updated form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 300
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 301
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 302
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 303
 testRunner.When("I log in as HCPCoordinator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 304
 testRunner.And("User searches for existing sHCP form and opens it", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.Then("sHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 306
 testRunner.When("User adds iHCP_05 as Reader supporting role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
 testRunner.Then("User iHCP_05 is added as Reader supporting role", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function),
                        string.Format("{0}", hcpcoord),
                        string.Format("{0}", linemanager),
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber),
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description),
                        string.Format("{0}", affcontact),
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise),
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency),
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription),
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin),
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription),
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment),
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 308
 testRunner.And("New sHCP form is verified", ((string)(null)), table82, "And ");
#line 310
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 311
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01.mHCP_creation_US")]
        [NUnit.Framework.CategoryAttribute("US_mHCP")]
        [NUnit.Framework.TestCaseAttribute("selectMe", "No", "JobTitle", "GPS", "GPS", "iHCP_02", "iHCP_03", "US", "adam", "kernedy", "Addiction", "Alabama", "1234567", "456321", "SomeCity", "CardioMetabolism", "Actemra", "Anemia", "1234567", "someTitle", "AAN", "Consulting", "Yes", "optional", "Poznan", "US", "Georgia", "optional", "optional", "No", "optional", "iHCP 04 Test User 04", "Consultant", "Guidelines Expertise", "optional", "No", "10.05", "10.00", "10.00", "0.00", "10.00", "ALL(Lek)", "Yes", "sdf", "5.55", "7", "ALL(Lek)", "sample description", "Yes", "Dinner", "5.23", "7", "ALL(Lek)", "sample restaurant name", "sample meal comment", "No", "No", "Flight", "Business", "555.23", "ALL(Lek)", "sample travel description", "No", "123", "555.05", "ALL(Lek)", "sample comment", "Yes", "yes", "Description", "^ID50", null)]
        public virtual void _01_MHCP_Creation_US(
                    string engownername, 
                    string globalfunction, 
                    string jobtitle, 
                    string engagementpaidby, 
                    string function, 
                    string hcpcoord, 
                    string linemanager, 
                    string hcpcountry, 
                    string hcpfirstname, 
                    string hcplastname, 
                    string hcpspeciality, 
                    string hcpstateofpractice, 
                    string hcpaddress, 
                    string hcpzipcode, 
                    string hcpcityname, 
                    string therapeuticarea, 
                    string productbrandmolecule, 
                    string indication, 
                    string protocolnumber, 
                    string engagementtitle, 
                    string congress, 
                    string engagementtype, 
                    string alldayengagement, 
                    string engagementvenue, 
                    string engagementcity, 
                    string engagementcountry, 
                    string engagementstateprovince, 
                    string scimedbusneeds, 
                    string engagementobjective, 
                    string contractedservice, 
                    string description, 
                    string affcontact, 
                    string hcproleselect, 
                    string rationalforhcp, 
                    string areaofexpertise, 
                    string nofee, 
                    string totalactivitytime, 
                    string preptime, 
                    string hourlyrate, 
                    string flatrate, 
                    string totaldisturbancefee, 
                    string currency, 
                    string noaccomodation, 
                    string accnametolookup, 
                    string acccostspernight, 
                    string accnrofnights, 
                    string acccurrency, 
                    string accdescription, 
                    string nomeal, 
                    string mealtype, 
                    string mealestcosts, 
                    string numberofmeals, 
                    string mealcurrency, 
                    string mealrestaurantname, 
                    string mealcomments, 
                    string breakfastin, 
                    string notravel, 
                    string traveltype, 
                    string travelcategory, 
                    string travelestcosts, 
                    string travelcurrency, 
                    string traveldescription, 
                    string noothercosts, 
                    string othcoststype, 
                    string othcostsamount, 
                    string othcostscurrency, 
                    string othcostscomment, 
                    string localreqfull, 
                    string locreqsubmit, 
                    string locreqspecify, 
                    string scenarioID, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "US_mHCP"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.mHCP_creation_US", @__tags);
#line 320
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 321
 testRunner.When("I clicked New Form button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
 testRunner.Then("mHCP Form option is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 323
 testRunner.When("I select mHCP option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
 testRunner.And("I click Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
 testRunner.Then("New mHCP Form opens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 326
 testRunner.When("I fill in Engagement Owner Details with following data:", ((string)(null)), table83, "When ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function)});
#line 328
 testRunner.Then("Engagement Owner Details is filled correctly", ((string)(null)), table84, "Then ");
#line 330
 testRunner.When("User clicks Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 331
 testRunner.And("History Section has Created record", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.Then("mHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
 testRunner.When("User clicks Edit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 334
 testRunner.Then("mHCP Form is in edit mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 335
 testRunner.When(string.Format("I fill in HCP Coordinator Section as {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
 testRunner.Then(string.Format("HCP Coordinator Section is filled with {0}", hcpcoord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
 testRunner.When(string.Format("I fill in Line Manager as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.Then(string.Format("Line Manager section is filled as {0}", linemanager), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        string.Format("{0}", hcpspeciality),
                        string.Format("{0}", hcpstateofpractice),
                        string.Format("{0}", hcpaddress),
                        string.Format("{0}", hcpzipcode),
                        string.Format("{0}", hcpcityname)});
#line 339
 testRunner.When("I create new Healthcare Professional Details", ((string)(null)), table85, "When ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname)});
#line 341
 testRunner.Then("Healthcare Professional Details is filled", ((string)(null)), table86, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 343
 testRunner.When("I fill in Product Information with following data:", ((string)(null)), table87, "When ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber)});
#line 345
 testRunner.Then("Product Information is filled correctly", ((string)(null)), table88, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 347
 testRunner.When("I fill in Engagement Description with following data:", ((string)(null)), table89, "When ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description)});
#line 349
 testRunner.Then("Engagement Description is filled correctly", ((string)(null)), table90, "Then ");
#line 351
 testRunner.When(string.Format("I fill in Affiliate Contact as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
 testRunner.Then(string.Format("Affiliate Contact is filled as {0}", affcontact), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 353
 testRunner.When("I fill in HCP Role with following data:", ((string)(null)), table91, "When ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise)});
#line 355
 testRunner.Then("HCP Role is filled correctly", ((string)(null)), table92, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 357
 testRunner.When("I fill in Fee for Service with following data:", ((string)(null)), table93, "When ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency)});
#line 359
 testRunner.Then("Fee for Service is filled correctly", ((string)(null)), table94, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 361
 testRunner.When("I fill in Accomodation Description with following data:", ((string)(null)), table95, "When ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription)});
#line 363
 testRunner.Then("Accomodation Description is filled correctly", ((string)(null)), table96, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 365
 testRunner.When("I fill in Meal Description with following data:", ((string)(null)), table97, "When ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin)});
#line 367
 testRunner.Then("Meal Description is filled correctly", ((string)(null)), table98, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 369
 testRunner.When("I fill in Travel Details with following data:", ((string)(null)), table99, "When ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription)});
#line 371
 testRunner.Then("Travel Details is filled correctly", ((string)(null)), table100, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 373
 testRunner.When("I fill in Other Costs with following data:", ((string)(null)), table101, "When ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment)});
#line 375
 testRunner.Then("Other Costs is filled correctly", ((string)(null)), table102, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 377
 testRunner.When("I fill in Local Requirements with following data:", ((string)(null)), table103, "When ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 379
 testRunner.Then("Local Requirements is filled correctly", ((string)(null)), table104, "Then ");
#line 381
 testRunner.When("I click Save Form Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 382
 testRunner.Then("mHCP Form is in view mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 383
 testRunner.And("I write down form ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        string.Format("{0}", engownername),
                        string.Format("{0}", globalfunction),
                        string.Format("{0}", jobtitle),
                        string.Format("{0}", engagementpaidby),
                        string.Format("{0}", function),
                        string.Format("{0}", hcpcoord),
                        string.Format("{0}", linemanager),
                        string.Format("{0}", hcpcountry),
                        string.Format("{0}", hcpfirstname),
                        string.Format("{0}", hcplastname),
                        "<hcpfirstname2>",
                        "<hcplastname2>",
                        string.Format("{0}", therapeuticarea),
                        string.Format("{0}", productbrandmolecule),
                        string.Format("{0}", indication),
                        string.Format("{0}", protocolnumber),
                        string.Format("{0}", engagementtitle),
                        string.Format("{0}", congress),
                        string.Format("{0}", engagementtype),
                        string.Format("{0}", alldayengagement),
                        string.Format("{0}", engagementvenue),
                        string.Format("{0}", engagementcity),
                        string.Format("{0}", engagementcountry),
                        string.Format("{0}", engagementstateprovince),
                        string.Format("{0}", scimedbusneeds),
                        string.Format("{0}", engagementobjective),
                        string.Format("{0}", contractedservice),
                        string.Format("{0}", description),
                        string.Format("{0}", affcontact),
                        string.Format("{0}", hcproleselect),
                        string.Format("{0}", rationalforhcp),
                        string.Format("{0}", areaofexpertise),
                        string.Format("{0}", nofee),
                        string.Format("{0}", totalactivitytime),
                        string.Format("{0}", preptime),
                        string.Format("{0}", hourlyrate),
                        string.Format("{0}", flatrate),
                        string.Format("{0}", totaldisturbancefee),
                        string.Format("{0}", currency),
                        string.Format("{0}", noaccomodation),
                        string.Format("{0}", accnametolookup),
                        string.Format("{0}", acccostspernight),
                        string.Format("{0}", accnrofnights),
                        string.Format("{0}", acccurrency),
                        string.Format("{0}", accdescription),
                        string.Format("{0}", nomeal),
                        string.Format("{0}", mealtype),
                        string.Format("{0}", mealestcosts),
                        string.Format("{0}", numberofmeals),
                        string.Format("{0}", mealcurrency),
                        string.Format("{0}", mealrestaurantname),
                        string.Format("{0}", mealcomments),
                        string.Format("{0}", breakfastin),
                        string.Format("{0}", notravel),
                        string.Format("{0}", traveltype),
                        string.Format("{0}", travelcategory),
                        string.Format("{0}", travelestcosts),
                        string.Format("{0}", travelcurrency),
                        string.Format("{0}", traveldescription),
                        string.Format("{0}", noothercosts),
                        string.Format("{0}", othcoststype),
                        string.Format("{0}", othcostsamount),
                        string.Format("{0}", othcostscurrency),
                        string.Format("{0}", othcostscomment),
                        string.Format("{0}", localreqfull),
                        string.Format("{0}", locreqsubmit),
                        string.Format("{0}", locreqspecify)});
#line 384
 testRunner.And("New mHCP form is verified", ((string)(null)), table105, "And ");
#line 386
 testRunner.When("I click Logout Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 387
 testRunner.Then("I am logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
